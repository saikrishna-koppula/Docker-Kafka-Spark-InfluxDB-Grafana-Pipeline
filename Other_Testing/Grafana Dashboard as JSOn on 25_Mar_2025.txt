{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "iteration": 1742921767804,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 20,
          "valueSize": 40
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "volumeData = from(bucket: \"${bucket}\")\n  |> range(start: ${__from})  // Use dynamically calculated start and stop times\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${interval}\")  // Filter by measurement\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Filter by symbol\n  |> filter(fn: (r) => r[\"_field\"] == \"volume\")  // Filter by volume field\n  |> sum()  // Sum the volume over the specified range\n\nvolumeData\n",
          "refId": "A"
        }
      ],
      "title": "Volume Traded - $asset_symbol",
      "type": "stat"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 6,
        "y": 0
      },
      "id": 15,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "titleSize": 20,
          "valueSize": 40
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "// Choose the appropriate table based on the interval\nselectedTable = if contains(value: \"${interval}\", set: [\"3h\", \"1d\", \"5d\"]) then\n    from(bucket: \"${minute_data_bucket}\")  // Use Minute Data\nelse\n    from(bucket: \"${day_data_bucket}\")     // Use Day Data\n\n// Calculate sum of trade count over the selected interval\ntradeCountData = selectedTable\n  |> range(start: -${interval})  // Use dynamically calculated start and stop times\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_data}\")  // Filter by measurement\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Filter by symbol\n  |> filter(fn: (r) => r[\"_field\"] == \"trade_count\")  // Filter by trade count field\n  |> sum()  // Sum the trade count over the specified range\n\ntradeCountData\n",
          "refId": "A"
        }
      ],
      "title": "Trade Count - $asset_symbol",
      "type": "stat"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "hideTimeOverride": false,
      "id": 16,
      "maxDataPoints": 5000,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "selectedTable = if \"${interval}\" == \"Minute\" then\n    from(bucket: \"${minute_data_bucket}\")  // Use Minute Data\nelse\n    from(bucket: \"${day_data_bucket}\")     // Use Day Data\n\ngraphData = selectedTable\n  |> range(start: ${__from})  // Use dynamically calculated start and stop times\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${measurement_data}\")\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Change to your desired symbol\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> keep(columns: [\"close\", \"_time\"])\n\ngraphData",
          "refId": "A"
        }
      ],
      "title": "Test Panel 2",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-red"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 6,
        "y": 4
      },
      "id": 8,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "min"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 20
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "// Calculate 52-week low over the selected interval\nweek52LowData = from(bucket: \"${bucket}\")\n  |> range(start: -52w)  // Set the range to the last 52 weeks\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Day\")  // Filter by measurement\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Filter by symbol\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")  // Filter by low field\n  // |> min()  // Get the minimum value of \"low\" over the 52-week period\n\nweek52LowData\n",
          "refId": "A"
        }
      ],
      "title": "52W Low",
      "type": "stat"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 6,
        "x": 6,
        "y": 6
      },
      "id": 11,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "text": {
          "valueSize": 20
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "// Calculate 52-week High over the selected interval\nweek52HighData = from(bucket: \"${bucket}\")\n  |> range(start: -52w)  // Set the range to the last 52 weeks\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Day\")  // Filter by measurement\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Filter by symbol\n  |> filter(fn: (r) => r[\"_field\"] == \"low\")  // Filter by low field\n  // |> min()  // Get the minimum value of \"low\" over the 52-week period\n\nweek52HighData\n",
          "refId": "A"
        }
      ],
      "title": "52W High",
      "type": "stat"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "hideTimeOverride": false,
      "id": 2,
      "options": {
        "candleStyle": "candles",
        "colorStrategy": "open-close",
        "colors": {
          "down": "red",
          "up": "green"
        },
        "includeAllFields": false,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "mode": "candles+volume"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "timeRange = if \"${interval}\" == \"Min\" then -5d\nelse\n  -10y\n\nfrom(bucket: \"${bucket}\")\n  |> range(start: timeRange)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${interval}\")\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> keep(columns: [\"open\", \"high\", \"low\", \"close\", \"_time\"])",
          "refId": "A"
        }
      ],
      "timeFrom": "$test",
      "title": "$asset_symbol",
      "transformations": [],
      "type": "candlestick"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 3600000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "hideTimeOverride": false,
      "id": 14,
      "maxDataPoints": 5000,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "NqGtF_hHz"
          },
          "query": "graphData = from(bucket: \"${bucket}\")\n  |> range(start: -10y)  // Use dynamically calculated start and stop times\n  |> filter(fn: (r) => r[\"_measurement\"] == \"${interval}\")\n  |> filter(fn: (r) => r[\"symbol\"] == \"${asset_symbol}\")  // Change to your desired symbol\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> keep(columns: [\"close\",\"_time\"])\n\ngraphData",
          "refId": "A"
        }
      ],
      "timeFrom": "$test",
      "title": "Test Panel",
      "transformations": [],
      "type": "timeseries"
    }
  ],
  "refresh": "10s",
  "schemaVersion": 35,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Now",
          "value": "Now"
        },
        "hide": 2,
        "includeAll": false,
        "label": "Graph Start Point",
        "multi": false,
        "name": "graph_start_point",
        "options": [
          {
            "selected": true,
            "text": "Now",
            "value": "Now"
          },
          {
            "selected": false,
            "text": "Last Available Data Point",
            "value": "Last Available Data Point"
          }
        ],
        "query": "Now, Last Available Data Point",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "Data_Bucket",
          "value": "Data_Bucket"
        },
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "bucket",
        "options": [
          {
            "selected": true,
            "text": "Data_Bucket",
            "value": "Data_Bucket"
          }
        ],
        "query": "Data_Bucket",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "Minute",
          "value": "Min"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Interval",
        "multi": false,
        "name": "interval",
        "options": [
          {
            "selected": true,
            "text": "Minute",
            "value": "Min"
          },
          {
            "selected": false,
            "text": "Day",
            "value": "Day"
          }
        ],
        "query": "Minute : Min, Day : Day",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "Stocks",
          "value": "Stocks"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(bucket: \"${bucket}\", tag: \"symbol_group\")",
        "hide": 0,
        "includeAll": false,
        "label": "Asset Type",
        "multi": false,
        "name": "asset_type",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(bucket: \"${bucket}\", tag: \"symbol_group\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "AAPL",
          "value": "AAPL"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"${bucket}\",\n  tag:\"symbol\",\n  predicate: (r) => r.symbol_group == \"${asset_type}\" and r._measurement == \"${interval}\" \n)\n\n//schema.measurementTagValues(bucket: \"${bucket}\", measurement: \"${interval}\", tag: \"symbol\")\n\n//schema.measurementTagKeys(bucket: \"${bucket}\", measurement: \"${interval}\")\n\n//schema.tagKeys(bucket: \"${bucket}\")\n\n//schema.tagValues(bucket: \"${bucket}\", tag:\"symbol\", predicate: (r) => r.symbol_group == \"${asset_type}\")",
        "hide": 0,
        "includeAll": false,
        "label": "Asset Symbol",
        "multi": false,
        "name": "asset_symbol",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"${bucket}\",\n  tag:\"symbol\",\n  predicate: (r) => r.symbol_group == \"${asset_type}\" and r._measurement == \"${interval}\" \n)\n\n//schema.measurementTagValues(bucket: \"${bucket}\", measurement: \"${interval}\", tag: \"symbol\")\n\n//schema.measurementTagKeys(bucket: \"${bucket}\", measurement: \"${interval}\")\n\n//schema.tagKeys(bucket: \"${bucket}\")\n\n//schema.tagValues(bucket: \"${bucket}\", tag:\"symbol\", predicate: (r) => r.symbol_group == \"${asset_type}\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "15m",
          "value": "15m"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "test",
        "options": [
          {
            "selected": false,
            "text": "1y",
            "value": "1y"
          },
          {
            "selected": false,
            "text": "30d",
            "value": "30d"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": true,
            "text": "15m",
            "value": "15m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "2h",
            "value": "2h"
          }
        ],
        "query": "1y, 30d, 5m, 10m, 15m, 1h, 2h",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Stock / Crypto Dashboard",
  "uid": "MoTsNuhNk",
  "version": 97,
  "weekStart": ""
}